plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Artifice
    modImplementation "com.lettuce.fudge:artifice:${project.artifice_version}"
    include "com.lettuce.fudge:artifice:${project.artifice_version}"

    // REI API
    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

    // LibGui
    modImplementation "io.github.cottonmc:LibGui:${project.libgui_version}"
    include "io.github.cottonmc:LibGui:${project.libgui_version}"

    // Mod Menu
    modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"

    modImplementation "me.shedaniel.cloth:config-2:${project.clothconfig_version}"
    include "me.shedaniel.cloth:config-2:${project.clothconfig_version}"

    // Autoconfig1u
    modApi("me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}"

    // Run AppleSkin at runtime (for debug)
    modRuntime "com.github.squeek502:AppleSkin:${project.appleskin_version}"

    include group: 'org.apache.commons', name: 'commons-compress', version: '1.20'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
